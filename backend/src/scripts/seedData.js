// backend/src/scripts/seedData.js
// ‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô (seed data) ‡∏•‡∏á‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• MongoDB
// ========================================================
// ### ‡∏ß‡∏¥‡∏ò‡∏µ‡∏£‡∏±‡∏ô Seed Script
// node src/scripts/seedData.js
// ========================================================
const mongoose = require('mongoose');
const Location = require('../models/locationModel');
const Category = require('../models/categoryModel');

async function seedDatabase() {
    try {
        // ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ MongoDB
        await mongoose.connect('mongodb://127.0.0.1:27017/MyUSafe_db', {
            useNewUrlParser: true,
            useUnifiedTopology: true,
        });
        console.log('üü¢ Connected to MongoDB');

        // ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤ (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
        await Location.deleteMany({});
        await Category.deleteMany({});
        console.log('üóëÔ∏è  Cleared old data');

        // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Locations
        const locations = [
            // ‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£ 1
            { building: '‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£ 1', floor: '1', room: '101' },
            { building: '‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£ 1', floor: '1', room: '102' },
            { building: '‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£ 1', floor: '2', room: '201' },
            { building: '‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£ 1', floor: '2', room: '202' },
            { building: '‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£ 1', floor: '3', room: '301' },
            { building: '‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£ 1', floor: '4', room: '401' },

            // ‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£ 2
            { building: '‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£ 2', floor: '1', room: '101' },
            { building: '‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£ 2', floor: '2', room: '201' },
            { building: '‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£ 2', floor: '3', room: '301' },

            // ‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏ß‡∏°
            { building: '‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏ß‡∏°', floor: '1', room: '‡∏´‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏° A' },
            { building: '‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏ß‡∏°', floor: '2', room: '‡∏´‡πâ‡∏≠‡∏á‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå' },
            { building: '‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏ß‡∏°', floor: '3', room: '‡∏´‡πâ‡∏≠‡∏á‡∏™‡∏°‡∏∏‡∏î' },

            // ‡∏´‡∏≠‡∏û‡∏±‡∏Å
            { building: '‡∏´‡∏≠‡∏û‡∏±‡∏Å‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤', floor: '1', room: '101' },
            { building: '‡∏´‡∏≠‡∏û‡∏±‡∏Å‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤', floor: '2', room: '201' },
            { building: '‡∏´‡∏≠‡∏û‡∏±‡∏Å‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤', floor: '3', room: '301' },
        ];

        await Location.insertMany(locations);
        console.log('‚úÖ Locations created:', locations.length);

        // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Categories
        const categories = [
            {
                name: '‡∏ô‡πâ‡∏≥‡∏ó‡πà‡∏ß‡∏°',
                description: '‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏ô‡πâ‡∏≥‡∏ó‡πà‡∏ß‡∏° ‡∏ô‡πâ‡∏≥‡∏£‡∏±‡πà‡∏ß ‡∏ó‡πà‡∏≠‡πÅ‡∏ï‡∏Å'
            },
            {
                name: '‡πÑ‡∏ü‡∏ü‡πâ‡∏≤',
                description: '‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÑ‡∏ü‡∏ü‡πâ‡∏≤ ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏õ‡∏£‡∏±‡∏ö‡∏≠‡∏≤‡∏Å‡∏≤‡∏® ‡∏´‡∏•‡∏≠‡∏î‡πÑ‡∏ü'
            },
            {
                name: '‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå/‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå',
                description: '‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå ‡∏≠‡∏¥‡∏ô‡πÄ‡∏ó‡∏≠‡∏£‡πå‡πÄ‡∏ô‡πá‡∏ï ‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå'
            },
            {
                name: '‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ',
                description: '‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ‡∏≠‡∏∑‡πà‡∏ô‡πÜ'
            },
            {
                name: '‡∏≠‡∏∑‡πà‡∏ô‡πÜ',
                description: '‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà'
            }
        ];

        await Category.insertMany(categories);
        console.log('‚úÖ Categories created:', categories.length);

        console.log('üéâ Seed data completed!');
        process.exit(0);
    } catch (err) {
        console.error('‚ùå Seed error:', err);
        process.exit(1);
    }
}

seedDatabase();