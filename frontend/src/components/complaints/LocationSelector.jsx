// frontend/src/components/complaints/LocationSelector.jsx
// Component ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà (‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£, ‡∏ä‡∏±‡πâ‡∏ô, ‡∏´‡πâ‡∏≠‡∏á) - FIXED VERSION
import { useState } from 'react';
import { AlertCircle } from 'lucide-react';

const LocationSelector = ({ register, errors, setValue }) => {
    const [selectedFloor, setSelectedFloor] = useState('');

    // Mock data - ‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï‡∏à‡∏∞‡∏î‡∏∂‡∏á‡∏à‡∏≤‡∏Å API
    const buildings = [
        { id: '1', name: '‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£ 1' },
        { id: '2', name: '‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£ 2' },
        { id: '3', name: '‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£ 3' },
        { id: '4', name: '‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£ 4' },
        { id: '5', name: '‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£ 5' },
        { id: '6', name: '‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£ 6' },
        { id: '7', name: '‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£ 7' },
        { id: '8', name: '‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£ 8' },
        { id: '9', name: '‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£ 9' },
        { id: '10', name: '‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£ 10' },
        { id: '11', name: '‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£ 11' },
        { id: '12', name: '‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£ 12' }
    ];

    const floors = [
        '‡∏ä‡∏±‡πâ‡∏ô 1', '‡∏ä‡∏±‡πâ‡∏ô 2', '‡∏ä‡∏±‡πâ‡∏ô 3', '‡∏ä‡∏±‡πâ‡∏ô 4',
        '‡∏ä‡∏±‡πâ‡∏ô 5', '‡∏ä‡∏±‡πâ‡∏ô 6', '‡∏ä‡∏±‡πâ‡∏ô 7', '‡∏ä‡∏±‡πâ‡∏ô 8',
        '‡∏ä‡∏±‡πâ‡∏ô 9', '‡∏ä‡∏±‡πâ‡∏ô 10', '‡∏ä‡∏±‡πâ‡∏ô 11', '‡∏ä‡∏±‡πâ‡∏ô 12',
        '‡∏ä‡∏±‡πâ‡∏ô 13', '‡∏ä‡∏±‡πâ‡∏ô 14', '‡∏ä‡∏±‡πâ‡∏ô 15', '‡∏ä‡∏±‡πâ‡∏ô 16'
    ];

    const rooms = {
        '‡∏ä‡∏±‡πâ‡∏ô 1': ['‡πÇ‡∏ñ‡∏á‡∏ó‡∏≤‡∏á‡πÄ‡∏î‡∏¥‡∏ô','‡∏´‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°','‡∏´‡πâ‡∏≠‡∏á‡∏ô‡πâ‡∏≥‡∏ä‡∏≤‡∏¢','‡∏´‡πâ‡∏≠‡∏á‡∏ô‡πâ‡∏≥‡∏´‡∏ç‡∏¥‡∏á','‡∏•‡∏¥‡∏ü‡∏ï‡πå'],
        '‡∏ä‡∏±‡πâ‡∏ô 2': ['‡πÇ‡∏ñ‡∏á‡∏ó‡∏≤‡∏á‡πÄ‡∏î‡∏¥‡∏ô','‡∏´‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°','‡∏´‡πâ‡∏≠‡∏á‡∏ô‡πâ‡∏≥‡∏ä‡∏≤‡∏¢','‡∏´‡πâ‡∏≠‡∏á‡∏ô‡πâ‡∏≥‡∏´‡∏ç‡∏¥‡∏á','201', '202', '203', '204', '205'],
        '‡∏ä‡∏±‡πâ‡∏ô 3': ['‡πÇ‡∏ñ‡∏á‡∏ó‡∏≤‡∏á‡πÄ‡∏î‡∏¥‡∏ô','‡∏´‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°','‡∏´‡πâ‡∏≠‡∏á‡∏ô‡πâ‡∏≥‡∏ä‡∏≤‡∏¢','‡∏´‡πâ‡∏≠‡∏á‡∏ô‡πâ‡∏≥‡∏´‡∏ç‡∏¥‡∏á','301', '302', '303', '304', '305'],
        '‡∏ä‡∏±‡πâ‡∏ô 4': ['‡πÇ‡∏ñ‡∏á‡∏ó‡∏≤‡∏á‡πÄ‡∏î‡∏¥‡∏ô','‡∏´‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°','‡∏´‡πâ‡∏≠‡∏á‡∏ô‡πâ‡∏≥‡∏ä‡∏≤‡∏¢','‡∏´‡πâ‡∏≠‡∏á‡∏ô‡πâ‡∏≥‡∏´‡∏ç‡∏¥‡∏á','401', '402', '403', '404', '405'],
        '‡∏ä‡∏±‡πâ‡∏ô 5': ['‡πÇ‡∏ñ‡∏á‡∏ó‡∏≤‡∏á‡πÄ‡∏î‡∏¥‡∏ô','‡∏´‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°','‡∏´‡πâ‡∏≠‡∏á‡∏ô‡πâ‡∏≥‡∏ä‡∏≤‡∏¢','‡∏´‡πâ‡∏≠‡∏á‡∏ô‡πâ‡∏≥‡∏´‡∏ç‡∏¥‡∏á','501', '502', '503', '504', '505'],
        '‡∏ä‡∏±‡πâ‡∏ô 6': ['‡πÇ‡∏ñ‡∏á‡∏ó‡∏≤‡∏á‡πÄ‡∏î‡∏¥‡∏ô','‡∏´‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°','‡∏´‡πâ‡∏≠‡∏á‡∏ô‡πâ‡∏≥‡∏ä‡∏≤‡∏¢','‡∏´‡πâ‡∏≠‡∏á‡∏ô‡πâ‡∏≥‡∏´‡∏ç‡∏¥‡∏á','601', '602', '603', '604', '605'],
        '‡∏ä‡∏±‡πâ‡∏ô 7': ['‡πÇ‡∏ñ‡∏á‡∏ó‡∏≤‡∏á‡πÄ‡∏î‡∏¥‡∏ô','‡∏´‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°','‡∏´‡πâ‡∏≠‡∏á‡∏ô‡πâ‡∏≥‡∏ä‡∏≤‡∏¢','‡∏´‡πâ‡∏≠‡∏á‡∏ô‡πâ‡∏≥‡∏´‡∏ç‡∏¥‡∏á','701', '702', '703', '704', '705'],
        '‡∏ä‡∏±‡πâ‡∏ô 8': ['‡πÇ‡∏ñ‡∏á‡∏ó‡∏≤‡∏á‡πÄ‡∏î‡∏¥‡∏ô','‡∏´‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°','‡∏´‡πâ‡∏≠‡∏á‡∏ô‡πâ‡∏≥‡∏ä‡∏≤‡∏¢','‡∏´‡πâ‡∏≠‡∏á‡∏ô‡πâ‡∏≥‡∏´‡∏ç‡∏¥‡∏á','801', '802', '803', '804', '805'],
        '‡∏ä‡∏±‡πâ‡∏ô 9': ['‡πÇ‡∏ñ‡∏á‡∏ó‡∏≤‡∏á‡πÄ‡∏î‡∏¥‡∏ô','‡∏´‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°','‡∏´‡πâ‡∏≠‡∏á‡∏ô‡πâ‡∏≥‡∏ä‡∏≤‡∏¢','‡∏´‡πâ‡∏≠‡∏á‡∏ô‡πâ‡∏≥‡∏´‡∏ç‡∏¥‡∏á','901', '902', '903', '904', '905'],
        '‡∏ä‡∏±‡πâ‡∏ô 10': ['‡πÇ‡∏ñ‡∏á‡∏ó‡∏≤‡∏á‡πÄ‡∏î‡∏¥‡∏ô','‡∏´‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°','‡∏´‡πâ‡∏≠‡∏á‡∏ô‡πâ‡∏≥‡∏ä‡∏≤‡∏¢','‡∏´‡πâ‡∏≠‡∏á‡∏ô‡πâ‡∏≥‡∏´‡∏ç‡∏¥‡∏á','1001', '1002', '1003', '1004', '1005'],
        '‡∏ä‡∏±‡πâ‡∏ô 11': ['‡πÇ‡∏ñ‡∏á‡∏ó‡∏≤‡∏á‡πÄ‡∏î‡∏¥‡∏ô','‡∏´‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°','‡∏´‡πâ‡∏≠‡∏á‡∏ô‡πâ‡∏≥‡∏ä‡∏≤‡∏¢','‡∏´‡πâ‡∏≠‡∏á‡∏ô‡πâ‡∏≥‡∏´‡∏ç‡∏¥‡∏á','1101', '1102', '1103', '1104', '1105'],
        '‡∏ä‡∏±‡πâ‡∏ô 12': ['‡πÇ‡∏ñ‡∏á‡∏ó‡∏≤‡∏á‡πÄ‡∏î‡∏¥‡∏ô','‡∏´‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°','‡∏´‡πâ‡∏≠‡∏á‡∏ô‡πâ‡∏≥‡∏ä‡∏≤‡∏¢','‡∏´‡πâ‡∏≠‡∏á‡∏ô‡πâ‡∏≥‡∏´‡∏ç‡∏¥‡∏á','1201', '1202', '1203', '1204', '1205'],
        '‡∏ä‡∏±‡πâ‡∏ô 13': ['‡πÇ‡∏ñ‡∏á‡∏ó‡∏≤‡∏á‡πÄ‡∏î‡∏¥‡∏ô','‡∏´‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°','‡∏´‡πâ‡∏≠‡∏á‡∏ô‡πâ‡∏≥‡∏ä‡∏≤‡∏¢','‡∏´‡πâ‡∏≠‡∏á‡∏ô‡πâ‡∏≥‡∏´‡∏ç‡∏¥‡∏á','1301', '1302', '1303', '1304', '1305'],
        '‡∏ä‡∏±‡πâ‡∏ô 14': ['‡πÇ‡∏ñ‡∏á‡∏ó‡∏≤‡∏á‡πÄ‡∏î‡∏¥‡∏ô','‡∏´‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°','‡∏´‡πâ‡∏≠‡∏á‡∏ô‡πâ‡∏≥‡∏ä‡∏≤‡∏¢','‡∏´‡πâ‡∏≠‡∏á‡∏ô‡πâ‡∏≥‡∏´‡∏ç‡∏¥‡∏á','1401', '1402', '1403', '1404', '1405'],
        '‡∏ä‡∏±‡πâ‡∏ô 15': ['‡πÇ‡∏ñ‡∏á‡∏ó‡∏≤‡∏á‡πÄ‡∏î‡∏¥‡∏ô','‡∏´‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°','‡∏´‡πâ‡∏≠‡∏á‡∏ô‡πâ‡∏≥‡∏ä‡∏≤‡∏¢','‡∏´‡πâ‡∏≠‡∏á‡∏ô‡πâ‡∏≥‡∏´‡∏ç‡∏¥‡∏á','1501', '1502', '1503', '1504', '1505'],
        '‡∏ä‡∏±‡πâ‡∏ô 16': ['‡πÇ‡∏ñ‡∏á‡∏ó‡∏≤‡∏á‡πÄ‡∏î‡∏¥‡∏ô','‡∏´‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°','‡∏´‡πâ‡∏≠‡∏á‡∏ô‡πâ‡∏≥‡∏ä‡∏≤‡∏¢','‡∏´‡πâ‡∏≠‡∏á‡∏ô‡πâ‡∏≥‡∏´‡∏ç‡∏¥‡∏á','1601', '1602', '1603', '1604', '1605']
    };

    const handleFloorChange = (e) => {
        const floor = e.target.value;
        setSelectedFloor(floor);
        setValue('room', ''); // Reset room when floor changes
    };

    return (
        <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
            {/* Building - ‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÉ‡∏´‡πâ‡∏™‡πà‡∏á building.name ‡πÅ‡∏ó‡∏ô building.id */}
            <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">
                    ‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£ <span className="text-red-500">*</span>
                </label>
                <select
                    {...register('building', { required: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£' })}
                    className={`w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-[#55C388] focus:border-transparent transition-all ${
                        errors.building ? 'border-red-500 bg-red-50' : 'border-gray-300'
                    }`}
                >
                    <option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£</option>
                    {buildings.map(building => (
                        <option 
                            key={building.id} 
                            value={building.name} // ‚úÖ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏à‡∏≤‡∏Å building.id ‡πÄ‡∏õ‡πá‡∏ô building.name
                        >
                            {building.name}
                        </option>
                    ))}
                </select>
                {errors.building && (
                    <p className="mt-1 text-sm text-red-600 flex items-center gap-1">
                        <AlertCircle size={14} />
                        {errors.building.message}
                    </p>
                )}
            </div>

            {/* Floor */}
            <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">
                    ‡∏ä‡∏±‡πâ‡∏ô <span className="text-red-500">*</span>
                </label>
                <select
                    {...register('floor', { required: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡∏±‡πâ‡∏ô' })}
                    onChange={(e) => {
                        handleFloorChange(e);
                        register('floor').onChange(e);
                    }}
                    className={`w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-[#55C388] focus:border-transparent transition-all ${
                        errors.floor ? 'border-red-500 bg-red-50' : 'border-gray-300'
                    }`}
                >
                    <option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡∏±‡πâ‡∏ô</option>
                    {floors.map(floor => (
                        <option key={floor} value={floor}>
                            {floor}
                        </option>
                    ))}
                </select>
                {errors.floor && (
                    <p className="mt-1 text-sm text-red-600 flex items-center gap-1">
                        <AlertCircle size={14} />
                        {errors.floor.message}
                    </p>
                )}
            </div>

            {/* Room */}
            <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">
                    ‡∏´‡πâ‡∏≠‡∏á <span className="text-gray-400 text-xs">(‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)</span>
                </label>
                <select
                    {...register('room')}
                    className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#55C388] focus:border-transparent disabled:cursor-not-allowed disabled:bg-gray-100 disabled:text-gray-400 transition-all"
                    disabled={!selectedFloor}
                >
                    <option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡πâ‡∏≠‡∏á (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)</option>
                    {selectedFloor && rooms[selectedFloor]?.map(room => (
                        <option key={room} value={room}>
                            {room}
                        </option>
                    ))}
                </select>
                {!selectedFloor && (
                    <p className="mt-1 text-xs text-gray-500">
                        üí° ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡∏±‡πâ‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡πâ‡∏≠‡∏á
                    </p>
                )}
            </div>
        </div>
    );
};

export default LocationSelector;